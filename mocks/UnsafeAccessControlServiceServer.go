// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UnsafeAccessControlServiceServer is an autogenerated mock type for the UnsafeAccessControlServiceServer type
type UnsafeAccessControlServiceServer struct {
	mock.Mock
}

type UnsafeAccessControlServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeAccessControlServiceServer) EXPECT() *UnsafeAccessControlServiceServer_Expecter {
	return &UnsafeAccessControlServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedAccessControlServiceServer provides a mock function with given fields:
func (_m *UnsafeAccessControlServiceServer) mustEmbedUnimplementedAccessControlServiceServer() {
	_m.Called()
}

// UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedAccessControlServiceServer'
type UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedAccessControlServiceServer is a helper method to define mock.On call
func (_e *UnsafeAccessControlServiceServer_Expecter) mustEmbedUnimplementedAccessControlServiceServer() *UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call {
	return &UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedAccessControlServiceServer")}
}

func (_c *UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call) Run(run func()) *UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call) Return() *UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call) RunAndReturn(run func()) *UnsafeAccessControlServiceServer_mustEmbedUnimplementedAccessControlServiceServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewUnsafeAccessControlServiceServer creates a new instance of UnsafeAccessControlServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeAccessControlServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeAccessControlServiceServer {
	mock := &UnsafeAccessControlServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
