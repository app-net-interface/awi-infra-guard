// Copyright (c) 2023 Cisco Systems, Inc. and its affiliates
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http:www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";
package infra;
import "types_k8s.proto";

option go_package = "./;infrapb";

service KubernetesService {
    rpc ListClusters(ListClustersRequest) returns (ListClustersResponse) {}
    rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {}
    rpc ListNodes(ListNodesRequest) returns (ListNodesResponse) {}
    rpc ListPods(ListPodsRequest) returns (ListPodsResponse) {}
    rpc ListServices(ListServicesRequest) returns (ListServicesResponse) {}
    rpc ListPodsCIDRs(ListPodsCIDRsRequest) returns (ListPodsCIDRsResponse);
    rpc ListServicesCIDRs(ListServicesCIDRsRequest) returns (ListServicesCIDRsResponse);
}

message ListNamespacesRequest {
    string cluster_name = 1;
    map<string, string> labels = 2;
}

message ListNamespacesResponse {
    repeated Namespace namespaces = 1;
    string last_sync_time = 2;
}

message ListNodesRequest {
    string cluster_name = 1;
    map<string, string> labels = 2;
}

message ListNodesResponse {
    repeated Node nodes = 1;
    string last_sync_time = 2;
}

message ListPodsRequest {
    string cluster_name = 1;
    map<string, string> labels = 2;
}

message ListPodsResponse {
    repeated Pod pods = 1;
    string last_sync_time = 2;
}

message ListServicesRequest {
    string cluster_name = 1;
    map<string, string> labels = 2;
}

message ListServicesResponse {
    repeated K8sService services = 1;
    string last_sync_time = 2;
}

message ListClustersRequest {}

message ListClustersResponse {
    repeated Cluster clusters = 1;
    string last_sync_time = 2;
}

message ListPodsCIDRsRequest {
    string cluster_name = 1;
}

message ListPodsCIDRsResponse {
    repeated string cidrs = 1;
}

message ListServicesCIDRsRequest {
    string cluster_name = 1;
}

message ListServicesCIDRsResponse {
    string cidr = 1;
}