// Copyright (c) 2023 Cisco Systems, Inc. and its affiliates
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http:www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";
package infra;

option go_package = "./;infrapb";
import "google/protobuf/timestamp.proto";

message Error {
    int32 code = 1;
    string errorMessage = 2;
    string serverity = 3;
}

message AwsRole {
    string role_arn = 1; // AWS: Role ARN
    string role_session_name = 2; // AWS: Session Name
    int32 duration_seconds = 3; // Optional: Session duration in seconds
}

message GcpRole {
    string service_account = 1; // GCP: Service Account Email
}

message AzureRole {
    string managed_identity = 1; // Azure: Managed Identity Client ID
}

message RoleBasedAuth {
    oneof role {
        AwsRole aws_role = 1;
        GcpRole gcp_role = 2;
        AzureRole azure_role = 3;
    }
}

message AwsUserAuth {
    string access_key_id = 1; // AWS: Access Key ID
    string secret_access_key = 2; // AWS: Secret Access Key
    string session_token = 3; // Optional: Session Token for temporary credentials
}

message GcpUserAuth {
    oneof auth_method {
        string api_key = 1; // GCP: API Key
        string json_key = 2; // GCP: Service Account JSON key file content
    }
}

message AzureUserAuth {
    string client_id = 1; // Azure: Client ID
    string client_secret = 2; // Azure: Client Secret
    string tenant_id = 3; // Azure: Tenant ID
    string certificate_path = 4; // Optional: Path to certificate file for certificate-based auth
}

message UserBasedAuth {
    oneof user_auth {
        AwsUserAuth aws_user_auth = 1;
        GcpUserAuth gcp_user_auth = 2;
        AzureUserAuth azure_user_auth = 3;
    }
}

message Credentials {
    oneof auth {
        RoleBasedAuth role_based_auth = 1;
        UserBasedAuth user_based_auth = 2;
    }
}

message Account {
    string provider = 1;
    string id = 2;
    string name = 3;
    string last_sync_time = 4;
}
message Region {
    string provider = 1;
    string id = 2;
    string name = 3;
    string last_sync_time = 4;
}


message VPC {
    string id = 1;
    string name = 2;
    string region = 3;
    map<string, string> labels = 4;
    string ipv4_cidr = 5;
    string ipv6_cidr = 6;
    string project = 7;
    string provider = 10;
    string account_id = 11;
    string last_sync_time = 12;
    string self_link = 13;
    google.protobuf.Timestamp created_at = 17;
    google.protobuf.Timestamp updated_at = 18;
}

message Instance {
    string provider = 1;
    string account_id = 2;
    string id = 3;
    string name = 4;
    string subnetID = 5;
    string project = 6;
    string vpcId = 7;
    string region = 8;
    string zone = 9;
    string publicIP = 10;
    string privateIP = 11;
    repeated string securityGroupIds = 12;
    repeated string interfaceIds = 13;
    string state = 14;
    string type = 15;
    map<string, string> labels = 16;
    google.protobuf.Timestamp created_at = 17;
    google.protobuf.Timestamp updated_at = 18;
    string last_sync_time = 19;
    string self_link = 20;
}

message Subnet {
    string id = 1;
    string name = 2;
    string cidr_block = 3;
    string vpc_id = 4;
    string zone = 5;
    string region = 6;
    map<string, string> labels = 7;
    string project = 8;
    string provider = 10;
    string account_id = 11;
    string last_sync_time = 12;
    string self_link = 13;  
    google.protobuf.Timestamp created_at = 17;
    google.protobuf.Timestamp updated_at = 18;
}


message ACL {
    string provider = 1;
    string id = 2;
    string name = 3;
    string vpc_id = 4;
    string region = 5;
    string account_id = 6;
    message ACLRule {
        int32 number = 1;
        string protocol = 2;
        string port_range = 3;
        repeated string source_ranges = 4;
        repeated string destination_ranges = 5;
        string action = 6;
        string direction = 7;
    }
    repeated ACLRule rules = 7;
    map<string, string> labels = 8;
    string project = 9;
    string last_sync_time = 10;
    string self_link = 11;
    google.protobuf.Timestamp created_at = 17;
    google.protobuf.Timestamp updated_at = 18;
}


message SecurityGroup {
    string provider = 1;
    string id = 2;
    string name = 3;
    string vpc_id = 4;
    string region = 5;
    string account_id = 6;
    message SecurityGroupRule {
        string protocol = 1;
        string port_range = 2;
        repeated string source = 3;
        string direction = 4;
    }
    repeated SecurityGroupRule rules = 7;
    map<string, string> labels = 8;
    string project = 9;

    string last_sync_time = 10;
    string self_link = 11;
    repeated string attached_running_instances = 12;
    google.protobuf.Timestamp created_at = 17;
    google.protobuf.Timestamp updated_at = 18;
}


message RouteTable {
    string provider = 1;
    string id = 2;
    string name = 3;
    string vpc_id = 4;
    string region = 5;
    string account_id = 6;
    message Route {
        string destination = 1;
        string target = 2;
        string status = 3;
    }
    repeated Route routes = 7;
    map<string, string> labels = 8;
    string project = 9;

    string last_sync_time = 10;
    string self_link = 11;
    google.protobuf.Timestamp created_at = 17;
    google.protobuf.Timestamp updated_at = 18;


}

message Router {
    string id = 1;
    string name = 2;
    string provider = 3;
    string region = 4;
    string vpc_id = 5;
    string state = 6;
    uint32 asn = 7;
    string advertised_range = 8;
    string advertised_group = 9;
    string vpn_type = 10;
    string subnet_id = 11;
    map<string, string> labels = 12;
    google.protobuf.Timestamp created_at = 13;
    google.protobuf.Timestamp updated_at = 14;
    string account_id = 15;
    string project = 16;
    string last_sync_time = 17;
    map<string, string> additional_properties = 18;
    string self_link = 19;
  }

  message NATGateway {
    string id = 1;
    string name = 2;
    string provider = 3;
    string account_id = 4;
    string vpc_id = 5;
    string region = 6;
    string state = 7;
    string public_ip = 8;
    string private_ip = 9;
    string subnet_id = 10;
    string project = 11;

    map<string, string> labels = 12;
    google.protobuf.Timestamp created_at = 13;
    google.protobuf.Timestamp updated_at = 14;
    string last_sync_time = 15;
    map<string, string> additional_properties = 16;
    string self_link = 17;
  }

  message IGW {
    string id = 1;
    string name = 2;
    string provider = 3;
    string account_id = 4;
    string attached_vpc_id = 5; // 
    string region = 6; // VPC Region
    string state = 7;
    string project = 8;

    map<string, string> labels = 11;
    google.protobuf.Timestamp created_at = 12;
    google.protobuf.Timestamp updated_at = 13;
    string last_sync_time = 14;
    string self_link = 15;
  }

  message VPCEndpoint {
    string id = 1;
    string name = 2;
    string provider = 3;
    string account_id = 4;
    string vpc_id = 5; // 
    string region = 6; // VPC Region
    string state = 7;
    string type = 8;
    string project = 9;

    string service_name = 10;
    string route_table_ids = 11; //comma separated subnet ids
    string subnet_ids = 12; //comma separated route table ids
    map<string, string> labels = 13;
    google.protobuf.Timestamp created_at = 14;
    google.protobuf.Timestamp updated_at = 15;
    string last_sync_time = 16;
    string self_link = 17;
  }

  message PublicIP {
    string id = 1;
    string type = 2;
    string provider = 3;
    string account_id = 4;
    string vpc_id = 5; //
    string region = 6; 
    string public_ip = 7;
    string instance_id = 8; 
    string private_ip = 9;
    string byoip = 10;
    string project = 11;

    map<string, string> labels = 12;
    google.protobuf.Timestamp created_at = 13;
    google.protobuf.Timestamp updated_at = 14;
    string last_sync_time = 15;
    string self_link = 16;
  }


  // Kubernetes 

  message Cluster {
    string name = 1;
    string full_name = 2;
    string arn = 3;
    string vpc_id = 4;
    string region = 5;
    string project = 6;
    map<string, string> labels = 7;
    string provider = 10;
    string account_id = 11;
    string id = 12;
    string last_sync_time = 13;
    string self_link = 14;
    google.protobuf.Timestamp created_at = 17;
    google.protobuf.Timestamp updated_at = 18;
}

message Node {
    string cluster = 1;
    string name = 2;
    string namespace = 3;
    repeated string addresses = 4;
    string project = 5;

    string last_sync_time = 6;
    string self_link = 7;

}

message Namespace {
    string cluster = 1;
    string name = 2;
    map<string, string> labels = 3;
    string project = 4;
    string last_sync_time = 5;
    string self_link = 6;
}

message Pod {
    string cluster = 1;
    string namespace = 2;
    string name = 3;
    string ip = 4;
    map<string, string> labels = 5;
    string state = 6;
    string project = 7;
    string last_sync_time = 8;
    string self_link = 9;
}

message K8sService {
    string cluster = 1;
    string namespace = 2;
    string name = 3;
    message Ingress {
        string hostname = 1;
        string IP = 2;
        repeated string ports = 3;
    }
    repeated Ingress ingresses = 4;
    map<string, string> labels = 8;
    string type = 9;
    string project = 10;
    string last_sync_time = 11;
    string self_link = 12;
}

// Specifies the type of load balancer (e.g., Application, Network, Classic, Global)
enum LoadBalancerType {
    ALB = 0;
    NLB = 1;
    ELB = 2;
    GLB = 3;
    UNKNOWN = 4;
}

message LoadBalancer {
    string id = 1;
    string name = 2;
    LoadBalancerType type = 3;

    // Specifies whether the load balancer is internal or internet-facing
    enum Scheme {
        INTERNET_FACING = 0;
        INTERNAL = 1;
    }
    Scheme scheme = 4;

    // Cross-cloud association
    string vpc_id = 5; // Association with VPC
    repeated string instance_ids = 6; // Instances registered to the load balancer
    repeated string target_group_ids = 7; // Target groups associated with the load balancer (normalized concept)

    // Listener and Protocols for routing traffic
    message Listener {
        string listener_id = 1;
        string protocol = 2; // e.g., HTTP, HTTPS, TCP, UDP
        int32 port = 3;
        string target_group_id = 4; // Association with a Target Group
    }
    repeated Listener listeners = 8;

    // Cross-zone load balancing and other settings
    bool cross_zone_load_balancing = 9;
    bool access_logs_enabled = 10; // Whether access logs are enabled
    string logging_bucket = 11; // Destination for access logs

    repeated string public_ips = 12; // Public IPs (if internet-facing)
    repeated string private_ips = 13; // Private IPs (if internal)

    string region = 14;
    string zone = 15;
    map<string, string> labels = 16;
    string project = 17;
    string provider = 18; // e.g., AWS, Azure, GCP
    string account_id = 19;
    string last_sync_time = 20;
    string self_link = 21;
    google.protobuf.Timestamp created_at = 22;
    google.protobuf.Timestamp updated_at = 23;
}

message NetworkInterface {
    string id = 1;
    string name = 2;

    // Association with other resources
    string subnet_id = 3; // Association with Subnet
    string vpc_id = 4; // Association with VPC
    string instance_id = 5; // Association with Instance/VM

    // Network interface identifiers
    string mac_address = 6; // MAC address of the network interface
    string public_ip = 7; // Primary public IP address (if any)
    string private_ip = 8; // Primary private IP address

    // Support for secondary private IP addresses (AWS, Azure, GCP)
    repeated string secondary_private_ips = 9;

    // Status fields
    enum Status {
        ATTACHED = 0;
        DETACHED = 1;
        UNKNOWN = 2;
    }
    Status status = 10;

    // Attachment details for how the interface is associated with an instance/VM
    message Attachment {
        string instance_id = 1;
        string attachment_id = 2;
        string device_index = 3; // The index of the device on the instance (e.g., eth0, eth1)
        google.protobuf.Timestamp attach_time = 4;
        bool delete_on_termination = 5; // Whether to delete the interface when the instance is terminated
    }
    Attachment attachment = 11;

    // DNS settings for the interface
    string dns_name = 12; // DNS name (if available)
    repeated string dns_servers = 13; // DNS servers assigned to the interface

    // Security groups associated with the interface
    repeated string security_group_ids = 14;

    // IP forwarding (used in cases like load balancers or NAT)
    bool ip_forwarding = 15;

    // Network performance metrics (e.g., bandwidth, MTU size)
    int32 mtu = 16; // Maximum Transmission Unit size
    string bandwidth = 17; // Bandwidth of the network interface

    // Cross-cloud compatibility fields
    string region = 18;
    string zone = 19;
    map<string, string> labels = 20;
    string project = 21;
    string provider = 22; // e.g., AWS, Azure, GCP
    string account_id = 23;
    string last_sync_time = 24;
    string self_link = 25;
    google.protobuf.Timestamp created_at = 26;
    google.protobuf.Timestamp updated_at = 27;
}
 // Specifies the type of key pair (e.g., RSA, ED25519)
 enum KeyPairType {
    RSA = 0;
    ED25519 = 1;
    OTHER = 2; // For future extensibility or unknown types
}

message KeyPair {
    string id = 1;
    string name = 2;
    
   
    KeyPairType key_pair_type = 3;

    string public_key = 4;
    string private_key_fingerprint = 5; // Only store fingerprint for security

    // Association with instances/VMs
    repeated string instance_ids = 6;

    // Cross-cloud fields
    string region = 7;
    string project = 8;
    string provider = 9; // e.g., AWS, Azure, GCP
    string account_id = 10;
    map<string, string> labels = 11;
    string last_sync_time = 12;
    string self_link = 13;
    google.protobuf.Timestamp created_at = 14;
    google.protobuf.Timestamp updated_at = 15;
}