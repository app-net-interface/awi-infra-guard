// source: access_control.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var types_pb = require('./types_pb.js');
goog.object.extend(proto, types_pb);
goog.exportSymbol('proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleByLabelsMatchRequest', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleByLabelsMatchResponse', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleBySubnetMatchRequest', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleBySubnetMatchResponse', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleInVPCRequest', null, global);
goog.exportSymbol('proto.infra.AddInboundAllowRuleInVPCResponse', null, global);
goog.exportSymbol('proto.infra.Ports', null, global);
goog.exportSymbol('proto.infra.RefreshInboundAllowRuleRequest', null, global);
goog.exportSymbol('proto.infra.RefreshInboundAllowRuleResponse', null, global);
goog.exportSymbol('proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest', null, global);
goog.exportSymbol('proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse', null, global);
goog.exportSymbol('proto.infra.RemoveInboundAllowRuleRulesByTagsRequest', null, global);
goog.exportSymbol('proto.infra.RemoveInboundAllowRuleRulesByTagsResponse', null, global);
goog.exportSymbol('proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest', null, global);
goog.exportSymbol('proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.Ports = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.Ports.repeatedFields_, null);
};
goog.inherits(proto.infra.Ports, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.Ports.displayName = 'proto.infra.Ports';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleInVPCRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleInVPCRequest.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleInVPCRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleInVPCRequest.displayName = 'proto.infra.AddInboundAllowRuleInVPCRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleInVPCResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleInVPCResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleInVPCResponse.displayName = 'proto.infra.AddInboundAllowRuleInVPCResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleByLabelsMatchRequest.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleByLabelsMatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleByLabelsMatchRequest.displayName = 'proto.infra.AddInboundAllowRuleByLabelsMatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleByLabelsMatchResponse.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleByLabelsMatchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleByLabelsMatchResponse.displayName = 'proto.infra.AddInboundAllowRuleByLabelsMatchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleBySubnetMatchRequest.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleBySubnetMatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleBySubnetMatchRequest.displayName = 'proto.infra.AddInboundAllowRuleBySubnetMatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleBySubnetMatchResponse.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleBySubnetMatchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleBySubnetMatchResponse.displayName = 'proto.infra.AddInboundAllowRuleBySubnetMatchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.displayName = 'proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.displayName = 'proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.repeatedFields_, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.displayName = 'proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.displayName = 'proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.displayName = 'proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.displayName = 'proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.repeatedFields_, null);
};
goog.inherits(proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.displayName = 'proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.displayName = 'proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infra.RemoveInboundAllowRuleRulesByTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.displayName = 'proto.infra.RemoveInboundAllowRuleRulesByTagsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infra.RemoveInboundAllowRuleRulesByTagsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.displayName = 'proto.infra.RemoveInboundAllowRuleRulesByTagsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RefreshInboundAllowRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.RefreshInboundAllowRuleRequest.repeatedFields_, null);
};
goog.inherits(proto.infra.RefreshInboundAllowRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RefreshInboundAllowRuleRequest.displayName = 'proto.infra.RefreshInboundAllowRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infra.RefreshInboundAllowRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infra.RefreshInboundAllowRuleResponse.repeatedFields_, null);
};
goog.inherits(proto.infra.RefreshInboundAllowRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infra.RefreshInboundAllowRuleResponse.displayName = 'proto.infra.RefreshInboundAllowRuleResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.Ports.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.Ports.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.Ports.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.Ports} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.Ports.toObject = function(includeInstance, msg) {
  var f, obj = {
    portsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.Ports}
 */
proto.infra.Ports.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.Ports;
  return proto.infra.Ports.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.Ports} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.Ports}
 */
proto.infra.Ports.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPorts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.Ports.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.Ports.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.Ports} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.Ports.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string ports = 1;
 * @return {!Array<string>}
 */
proto.infra.Ports.prototype.getPortsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.Ports} returns this
 */
proto.infra.Ports.prototype.setPortsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.Ports} returns this
 */
proto.infra.Ports.prototype.addPorts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.Ports} returns this
 */
proto.infra.Ports.prototype.clearPortsList = function() {
  return this.setPortsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleInVPCRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleInVPCRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleInVPCRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleInVPCRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationVpcId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cidrsToAllowList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    ruleName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    region: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleInVPCRequest;
  return proto.infra.AddInboundAllowRuleInVPCRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleInVPCRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationVpcId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCidrsToAllow(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleName(value);
      break;
    case 5:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleInVPCRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleInVPCRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleInVPCRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationVpcId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCidrsToAllowList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getRuleName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destination_vpc_id = 2;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.getDestinationVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.setDestinationVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string cidrs_to_allow = 3;
 * @return {!Array<string>}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.getCidrsToAllowList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.setCidrsToAllowList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.addCidrsToAllow = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.clearCidrsToAllowList = function() {
  return this.setCidrsToAllowList([]);
};


/**
 * optional string rule_name = 4;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.getRuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.setRuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * map<string, string> tags = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};


/**
 * optional string region = 6;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string account_id = 7;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleInVPCRequest} returns this
 */
proto.infra.AddInboundAllowRuleInVPCRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleInVPCResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleInVPCResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleInVPCResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleInVPCResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleInVPCResponse}
 */
proto.infra.AddInboundAllowRuleInVPCResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleInVPCResponse;
  return proto.infra.AddInboundAllowRuleInVPCResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleInVPCResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleInVPCResponse}
 */
proto.infra.AddInboundAllowRuleInVPCResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleInVPCResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleInVPCResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleInVPCResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleInVPCResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleByLabelsMatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vpcId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ruleName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    cidrsToAllowList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    protocolsAndPortsMap: (f = msg.getProtocolsAndPortsMap()) ? f.toObject(includeInstance, proto.infra.Ports.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 7, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleByLabelsMatchRequest;
  return proto.infra.AddInboundAllowRuleByLabelsMatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVpcId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleName(value);
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCidrsToAllow(value);
      break;
    case 6:
      var value = msg.getProtocolsAndPortsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.infra.Ports.deserializeBinaryFromReader, "", new proto.infra.Ports());
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleByLabelsMatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVpcId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRuleName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCidrsToAllowList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getProtocolsAndPortsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.infra.Ports.serializeBinaryToWriter);
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vpc_id = 2;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.setVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rule_name = 3;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getRuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.setRuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * repeated string cidrs_to_allow = 5;
 * @return {!Array<string>}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getCidrsToAllowList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.setCidrsToAllowList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.addCidrsToAllow = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.clearCidrsToAllowList = function() {
  return this.setCidrsToAllowList([]);
};


/**
 * map<string, Ports> protocols_and_ports = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.infra.Ports>}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getProtocolsAndPortsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.infra.Ports>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.infra.Ports));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.clearProtocolsAndPortsMap = function() {
  this.getProtocolsAndPortsMap().clear();
  return this;};


/**
 * optional string region = 7;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string account_id = 8;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleByLabelsMatchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ruleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instancesList: jspb.Message.toObjectList(msg.getInstancesList(),
    types_pb.Instance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleByLabelsMatchResponse;
  return proto.infra.AddInboundAllowRuleByLabelsMatchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleId(value);
      break;
    case 2:
      var value = new types_pb.Instance;
      reader.readMessage(value,types_pb.Instance.deserializeBinaryFromReader);
      msg.addInstances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleByLabelsMatchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      types_pb.Instance.serializeBinaryToWriter
    );
  }
};


/**
 * optional string rule_id = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.getRuleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.setRuleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Instance instances = 2;
 * @return {!Array<!proto.infra.Instance>}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.getInstancesList = function() {
  return /** @type{!Array<!proto.infra.Instance>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Instance, 2));
};


/**
 * @param {!Array<!proto.infra.Instance>} value
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse} returns this
*/
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.setInstancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.infra.Instance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.infra.Instance}
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.addInstances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.infra.Instance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleByLabelsMatchResponse} returns this
 */
proto.infra.AddInboundAllowRuleByLabelsMatchResponse.prototype.clearInstancesList = function() {
  return this.setInstancesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleBySubnetMatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vpcId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ruleName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subnetCidrsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    cidrsToAllowList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    protocolsAndPortsMap: (f = msg.getProtocolsAndPortsMap()) ? f.toObject(includeInstance, proto.infra.Ports.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 7, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleBySubnetMatchRequest;
  return proto.infra.AddInboundAllowRuleBySubnetMatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVpcId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubnetCidrs(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCidrsToAllow(value);
      break;
    case 6:
      var value = msg.getProtocolsAndPortsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.infra.Ports.deserializeBinaryFromReader, "", new proto.infra.Ports());
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleBySubnetMatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVpcId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRuleName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubnetCidrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getCidrsToAllowList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getProtocolsAndPortsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.infra.Ports.serializeBinaryToWriter);
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vpc_id = 2;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.setVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rule_name = 3;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getRuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.setRuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string subnet_cidrs = 4;
 * @return {!Array<string>}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getSubnetCidrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.setSubnetCidrsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.addSubnetCidrs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.clearSubnetCidrsList = function() {
  return this.setSubnetCidrsList([]);
};


/**
 * repeated string cidrs_to_allow = 5;
 * @return {!Array<string>}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getCidrsToAllowList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.setCidrsToAllowList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.addCidrsToAllow = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.clearCidrsToAllowList = function() {
  return this.setCidrsToAllowList([]);
};


/**
 * map<string, Ports> protocols_and_ports = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.infra.Ports>}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getProtocolsAndPortsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.infra.Ports>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.infra.Ports));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.clearProtocolsAndPortsMap = function() {
  this.getProtocolsAndPortsMap().clear();
  return this;};


/**
 * optional string region = 7;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string account_id = 8;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleBySubnetMatchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ruleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instancesList: jspb.Message.toObjectList(msg.getInstancesList(),
    types_pb.Instance.toObject, includeInstance),
    subnetsList: jspb.Message.toObjectList(msg.getSubnetsList(),
    types_pb.Subnet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleBySubnetMatchResponse;
  return proto.infra.AddInboundAllowRuleBySubnetMatchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleId(value);
      break;
    case 2:
      var value = new types_pb.Instance;
      reader.readMessage(value,types_pb.Instance.deserializeBinaryFromReader);
      msg.addInstances(value);
      break;
    case 3:
      var value = new types_pb.Subnet;
      reader.readMessage(value,types_pb.Subnet.deserializeBinaryFromReader);
      msg.addSubnets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleBySubnetMatchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      types_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getSubnetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      types_pb.Subnet.serializeBinaryToWriter
    );
  }
};


/**
 * optional string rule_id = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.getRuleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.setRuleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Instance instances = 2;
 * @return {!Array<!proto.infra.Instance>}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.getInstancesList = function() {
  return /** @type{!Array<!proto.infra.Instance>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Instance, 2));
};


/**
 * @param {!Array<!proto.infra.Instance>} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} returns this
*/
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.setInstancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.infra.Instance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.infra.Instance}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.addInstances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.infra.Instance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.clearInstancesList = function() {
  return this.setInstancesList([]);
};


/**
 * repeated Subnet subnets = 3;
 * @return {!Array<!proto.infra.Subnet>}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.getSubnetsList = function() {
  return /** @type{!Array<!proto.infra.Subnet>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Subnet, 3));
};


/**
 * @param {!Array<!proto.infra.Subnet>} value
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} returns this
*/
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.setSubnetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.infra.Subnet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.infra.Subnet}
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.addSubnets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.infra.Subnet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleBySubnetMatchResponse} returns this
 */
proto.infra.AddInboundAllowRuleBySubnetMatchResponse.prototype.clearSubnetsList = function() {
  return this.setSubnetsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vpcId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ruleName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    instancesIpsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    cidrsToAllowList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    protocolsAndPortsMap: (f = msg.getProtocolsAndPortsMap()) ? f.toObject(includeInstance, proto.infra.Ports.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 7, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest;
  return proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVpcId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addInstancesIps(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCidrsToAllow(value);
      break;
    case 6:
      var value = msg.getProtocolsAndPortsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.infra.Ports.deserializeBinaryFromReader, "", new proto.infra.Ports());
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVpcId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRuleName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInstancesIpsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getCidrsToAllowList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getProtocolsAndPortsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.infra.Ports.serializeBinaryToWriter);
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vpc_id = 2;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.setVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rule_name = 3;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getRuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.setRuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string instances_ips = 4;
 * @return {!Array<string>}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getInstancesIpsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.setInstancesIpsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.addInstancesIps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.clearInstancesIpsList = function() {
  return this.setInstancesIpsList([]);
};


/**
 * repeated string cidrs_to_allow = 5;
 * @return {!Array<string>}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getCidrsToAllowList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.setCidrsToAllowList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.addCidrsToAllow = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.clearCidrsToAllowList = function() {
  return this.setCidrsToAllowList([]);
};


/**
 * map<string, Ports> protocols_and_ports = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.infra.Ports>}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getProtocolsAndPortsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.infra.Ports>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.infra.Ports));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.clearProtocolsAndPortsMap = function() {
  this.getProtocolsAndPortsMap().clear();
  return this;};


/**
 * optional string region = 7;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string account_id = 8;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ruleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instancesList: jspb.Message.toObjectList(msg.getInstancesList(),
    types_pb.Instance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse;
  return proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleId(value);
      break;
    case 2:
      var value = new types_pb.Instance;
      reader.readMessage(value,types_pb.Instance.deserializeBinaryFromReader);
      msg.addInstances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      types_pb.Instance.serializeBinaryToWriter
    );
  }
};


/**
 * optional string rule_id = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.getRuleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.setRuleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Instance instances = 2;
 * @return {!Array<!proto.infra.Instance>}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.getInstancesList = function() {
  return /** @type{!Array<!proto.infra.Instance>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Instance, 2));
};


/**
 * @param {!Array<!proto.infra.Instance>} value
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse} returns this
*/
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.setInstancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.infra.Instance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.infra.Instance}
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.addInstances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.infra.Instance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse} returns this
 */
proto.infra.AddInboundAllowRuleByInstanceIPMatchResponse.prototype.clearInstancesList = function() {
  return this.setInstancesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    loadBalancerDns: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vpcId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ruleName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cidrsToAllowList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    protocolsAndPortsMap: (f = msg.getProtocolsAndPortsMap()) ? f.toObject(includeInstance, proto.infra.Ports.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 7, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest;
  return proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadBalancerDns(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVpcId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCidrsToAllow(value);
      break;
    case 6:
      var value = msg.getProtocolsAndPortsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.infra.Ports.deserializeBinaryFromReader, "", new proto.infra.Ports());
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLoadBalancerDns();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVpcId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRuleName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCidrsToAllowList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getProtocolsAndPortsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.infra.Ports.serializeBinaryToWriter);
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string load_balancer_dns = 2;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getLoadBalancerDns = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.setLoadBalancerDns = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string vpc_id = 3;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.setVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string rule_name = 4;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getRuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.setRuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string cidrs_to_allow = 5;
 * @return {!Array<string>}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getCidrsToAllowList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.setCidrsToAllowList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.addCidrsToAllow = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.clearCidrsToAllowList = function() {
  return this.setCidrsToAllowList([]);
};


/**
 * map<string, Ports> protocols_and_ports = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.infra.Ports>}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getProtocolsAndPortsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.infra.Ports>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.infra.Ports));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.clearProtocolsAndPortsMap = function() {
  this.getProtocolsAndPortsMap().clear();
  return this;};


/**
 * optional string region = 7;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string account_id = 8;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    loadBalancerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ruleId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse;
  return proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadBalancerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLoadBalancerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRuleId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string load_balancer_id = 1;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.prototype.getLoadBalancerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.prototype.setLoadBalancerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string rule_id = 2;
 * @return {string}
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.prototype.getRuleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse} returns this
 */
proto.infra.AddInboundAllowRuleForLoadBalancerByDNSResponse.prototype.setRuleId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vpcId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ruleName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    region: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest;
  return proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVpcId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVpcId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRuleName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vpc_id = 2;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.getVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.setVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rule_name = 3;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.getRuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.setRuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string account_id = 5;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse;
  return proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleFromVPCByNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vpcId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    instanceIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    loadBalancerIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    ruleId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    region: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest;
  return proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVpcId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addInstanceIds(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addLoadBalancerIds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVpcId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInstanceIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getLoadBalancerIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getRuleId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vpc_id = 2;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.getVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.setVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string instance_ids = 3;
 * @return {!Array<string>}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.getInstanceIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.setInstanceIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.addInstanceIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.clearInstanceIdsList = function() {
  return this.setInstanceIdsList([]);
};


/**
 * repeated string load_balancer_ids = 4;
 * @return {!Array<string>}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.getLoadBalancerIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.setLoadBalancerIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.addLoadBalancerIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.clearLoadBalancerIdsList = function() {
  return this.setLoadBalancerIdsList([]);
};


/**
 * optional string rule_id = 5;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.getRuleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.setRuleId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string region = 6;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string account_id = 7;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest} returns this
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse;
  return proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRulesFromVPCByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vpcId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ruleName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    region: jspb.Message.getFieldWithDefault(msg, 5, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RemoveInboundAllowRuleRulesByTagsRequest;
  return proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVpcId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleName(value);
      break;
    case 4:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVpcId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRuleName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vpc_id = 2;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.getVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.setVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rule_name = 3;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.getRuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.setRuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> tags = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};


/**
 * optional string region = 5;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string account_id = 6;
 * @return {string}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsRequest} returns this
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RemoveInboundAllowRuleRulesByTagsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsResponse}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RemoveInboundAllowRuleRulesByTagsResponse;
  return proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RemoveInboundAllowRuleRulesByTagsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RemoveInboundAllowRuleRulesByTagsResponse}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RemoveInboundAllowRuleRulesByTagsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RemoveInboundAllowRuleRulesByTagsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.RefreshInboundAllowRuleRequest.repeatedFields_ = [3,4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RefreshInboundAllowRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RefreshInboundAllowRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RefreshInboundAllowRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ruleId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cidrsToAddList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    cidrsToRemoveList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    destinationLabelsMap: (f = msg.getDestinationLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    destinationPrefixesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    destinationVpcId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    protocolsAndPortsMap: (f = msg.getProtocolsAndPortsMap()) ? f.toObject(includeInstance, proto.infra.Ports.toObject) : [],
    region: jspb.Message.getFieldWithDefault(msg, 9, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RefreshInboundAllowRuleRequest}
 */
proto.infra.RefreshInboundAllowRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RefreshInboundAllowRuleRequest;
  return proto.infra.RefreshInboundAllowRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RefreshInboundAllowRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RefreshInboundAllowRuleRequest}
 */
proto.infra.RefreshInboundAllowRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCidrsToAdd(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCidrsToRemove(value);
      break;
    case 5:
      var value = msg.getDestinationLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addDestinationPrefixes(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationVpcId(value);
      break;
    case 8:
      var value = msg.getProtocolsAndPortsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.infra.Ports.deserializeBinaryFromReader, "", new proto.infra.Ports());
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RefreshInboundAllowRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RefreshInboundAllowRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RefreshInboundAllowRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRuleId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCidrsToAddList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCidrsToRemoveList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDestinationLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getDestinationPrefixesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getDestinationVpcId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProtocolsAndPortsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.infra.Ports.serializeBinaryToWriter);
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string rule_id = 2;
 * @return {string}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getRuleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setRuleId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string cidrs_to_add = 3;
 * @return {!Array<string>}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getCidrsToAddList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setCidrsToAddList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.addCidrsToAdd = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.clearCidrsToAddList = function() {
  return this.setCidrsToAddList([]);
};


/**
 * repeated string cidrs_to_remove = 4;
 * @return {!Array<string>}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getCidrsToRemoveList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setCidrsToRemoveList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.addCidrsToRemove = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.clearCidrsToRemoveList = function() {
  return this.setCidrsToRemoveList([]);
};


/**
 * map<string, string> destination_labels = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getDestinationLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.clearDestinationLabelsMap = function() {
  this.getDestinationLabelsMap().clear();
  return this;};


/**
 * repeated string destination_prefixes = 6;
 * @return {!Array<string>}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getDestinationPrefixesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setDestinationPrefixesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.addDestinationPrefixes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.clearDestinationPrefixesList = function() {
  return this.setDestinationPrefixesList([]);
};


/**
 * optional string destination_vpc_id = 7;
 * @return {string}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getDestinationVpcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setDestinationVpcId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, Ports> protocols_and_ports = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.infra.Ports>}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getProtocolsAndPortsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.infra.Ports>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.infra.Ports));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.clearProtocolsAndPortsMap = function() {
  this.getProtocolsAndPortsMap().clear();
  return this;};


/**
 * optional string region = 9;
 * @return {string}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string account_id = 10;
 * @return {string}
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.infra.RefreshInboundAllowRuleRequest} returns this
 */
proto.infra.RefreshInboundAllowRuleRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infra.RefreshInboundAllowRuleResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infra.RefreshInboundAllowRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infra.RefreshInboundAllowRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RefreshInboundAllowRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    instancesList: jspb.Message.toObjectList(msg.getInstancesList(),
    types_pb.Instance.toObject, includeInstance),
    subnetsList: jspb.Message.toObjectList(msg.getSubnetsList(),
    types_pb.Subnet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infra.RefreshInboundAllowRuleResponse}
 */
proto.infra.RefreshInboundAllowRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infra.RefreshInboundAllowRuleResponse;
  return proto.infra.RefreshInboundAllowRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infra.RefreshInboundAllowRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infra.RefreshInboundAllowRuleResponse}
 */
proto.infra.RefreshInboundAllowRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_pb.Instance;
      reader.readMessage(value,types_pb.Instance.deserializeBinaryFromReader);
      msg.addInstances(value);
      break;
    case 2:
      var value = new types_pb.Subnet;
      reader.readMessage(value,types_pb.Subnet.deserializeBinaryFromReader);
      msg.addSubnets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infra.RefreshInboundAllowRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infra.RefreshInboundAllowRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infra.RefreshInboundAllowRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      types_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getSubnetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      types_pb.Subnet.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Instance instances = 1;
 * @return {!Array<!proto.infra.Instance>}
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.getInstancesList = function() {
  return /** @type{!Array<!proto.infra.Instance>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Instance, 1));
};


/**
 * @param {!Array<!proto.infra.Instance>} value
 * @return {!proto.infra.RefreshInboundAllowRuleResponse} returns this
*/
proto.infra.RefreshInboundAllowRuleResponse.prototype.setInstancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.infra.Instance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.infra.Instance}
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.addInstances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.infra.Instance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.RefreshInboundAllowRuleResponse} returns this
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.clearInstancesList = function() {
  return this.setInstancesList([]);
};


/**
 * repeated Subnet subnets = 2;
 * @return {!Array<!proto.infra.Subnet>}
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.getSubnetsList = function() {
  return /** @type{!Array<!proto.infra.Subnet>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Subnet, 2));
};


/**
 * @param {!Array<!proto.infra.Subnet>} value
 * @return {!proto.infra.RefreshInboundAllowRuleResponse} returns this
*/
proto.infra.RefreshInboundAllowRuleResponse.prototype.setSubnetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.infra.Subnet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.infra.Subnet}
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.addSubnets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.infra.Subnet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infra.RefreshInboundAllowRuleResponse} returns this
 */
proto.infra.RefreshInboundAllowRuleResponse.prototype.clearSubnetsList = function() {
  return this.setSubnetsList([]);
};


goog.object.extend(exports, proto.infra);
