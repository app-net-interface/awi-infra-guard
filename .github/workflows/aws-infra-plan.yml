name: Plan infrastructure with terraform
on:
  pull_request:

env:
  TF_CLOUD_ORGANIZATION: "ani-hcp"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "awi-infra-guard-workspace"
  APPLY_CONFIG_DIRECTORY: "./terraform/aws/create"
  DESTROY_CONFIG_DIRECTORY: "./terraform/aws/destroy"

jobs:
  plan:
    name: Plan infrastructure
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Upload Configuration
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.0
      id: upload
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        directory: ${{ env.APPLY_CONFIG_DIRECTORY }}
        speculative: true
    - name: Create Plan Run
      uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
      id: run
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
        plan_only: true
    - name: Get Plan Output
      uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.0
      id: plan-output
      with:
        plan: ${{ steps.run.outputs.plan_id }}
    - name: Update PR
      uses: actions/github-script@v6
      id: plan-comment
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // 1. Retrieve existing bot comments for the PR
                      const { data: comments } = await github.rest.issues.listComments({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: context.issue.number,
                      })
                      const botComment = comments.find(comment => {
                        return comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output')
                      })
                      const output = `#### Terraform Cloud Plan Output
                        \`\`\`\n
                        Plan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.
                        \`\`\`
                        [Terraform Cloud Plan](${{ steps.run.outputs.run_link }})
                        `
                      // 3. If we have a comment, update it, otherwise create a new one
                      if (botComment) {
                        github.rest.issues.updateComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          comment_id: botComment.id,
                          body: output
                        })
                      } else {
                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: output
                        })
                      }

  # TODO: move to aws-infra-test before merge
  create:
    name: Create resources
    needs: plan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Upload Configuration
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.0
      id: upload
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        directory: ${{ env.APPLY_CONFIG_DIRECTORY }}
    - name: Create Apply Run
      uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
      id: create-run
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
    - name: Apply
      uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.0
      id: apply
      if: fromJSON(steps.create-run.outputs.payload).data.attributes.actions.IsConfirmable
      with:
        run: ${{ steps.create-run.outputs.run_id }}
        comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

  test:
    name: Infrastructure tests
    needs: create
    runs-on: ubuntu-latest
    steps:
      - name: Sleep for 5 minutes
        run: sleep 300

  destroy:
    name: Destroy
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.DESTROY_CONFIG_DIRECTORY }}
      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
        id: create-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.0
        id: apply
        if: fromJSON(steps.create-run.outputs.payload).data.attributes.actions.IsConfirmable
        with:
          run: ${{ steps.create-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
