name: Test infrastructure
on: 
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      self_hosted_runner_name:
        description: 'AWS Secret Access Key'
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key_id }}
  AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_access_key }}

jobs:
  create:
    name: Create resources
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2
      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ./terraform/aws
      - name: Terraform plan
        id: plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform/aws
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform/aws

      - name: Upload Terraform state
        uses: actions/upload-artifact@v4
        with:
          name: terraform_state
          path: ./terraform/aws/terraform.tfstate

  test:
    name: Infrastructure tests
    needs: create
    runs-on: [self-hosted, "${{ github.event.inputs.self_hosted_runner_name }}"]
    steps:
      - name: Sleep for 5 minutes
        run: sleep 300
  
  destroy:
    name: Destroy resources
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Terraform state
        uses: actions/download-artifact@v4
        with:
          name: terraform_state
          path: ./terraform/aws

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform/aws
      - name: Destroy Terraform configuration
        run: terraform destroy -auto-approve
        working-directory: ./terraform/aws